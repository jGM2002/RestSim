/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package restaurant;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalTime;

/**
 *
 * @author Admin
 */
public class TableGUI extends javax.swing.JFrame {
    private JTextArea orderTextArea;
    private JButton modifyOrderButton, generateBillButton;
    private boolean orderConfirmed = false;
    private LocalTime closingTime = LocalTime.of(23, 0);
    private static DefaultTableModel orderTableModel = new DefaultTableModel();
    JTable orderTable = new JTable(orderTableModel);
    private WaiterGUI waiterGUI;
    private static String menuContent;
    private WelcomeGUI welcomeGUI;

    /**
     * Creates new form TableGUI
     */
    public TableGUI(WaiterGUI waiterGUI) {
        this.waiterGUI = waiterGUI;
        initComponents();
        setTitle("Table GUI");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        
        orderTableModel.addColumn("Plato");
        orderTableModel.addColumn("Cantidad");
        orderTableModel.addColumn("Precio");
        
        orderTable = new JTable(orderTableModel);
        
        JScrollPane scrollPane = new JScrollPane(orderTable);
        Container container = getContentPane();
        container.setLayout(new BorderLayout());
        container.add(scrollPane, BorderLayout.CENTER);
        
        modifyOrderButton = new JButton("Modify Order");
        modifyOrderButton.addActionListener(new ModifyOrderListener());
        
        generateBillButton = new JButton("Generate Bill");
        generateBillButton.addActionListener(new GenerateBillListener());
        generateBillButton.setEnabled(false);
      
        container.add(modifyOrderButton, BorderLayout.WEST);
        container.add(generateBillButton, BorderLayout.EAST);
    }
    
    private class ModifyOrderListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (isOrderAllowed()) {
                if (!orderConfirmed) {
                    JOptionPane.showMessageDialog(TableGUI.this, "Order modified successfully");
                } else {
                    JOptionPane.showMessageDialog(TableGUI.this, "Cannot modify order after confirmation");
                }
            } else {
                JOptionPane.showMessageDialog(TableGUI.this, "Cannot place order after closing time");
            }
        }
    }
    
    private class GenerateBillListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            JOptionPane.showMessageDialog(TableGUI.this, "Bill generated successfully");
        }
    }
    
    private boolean isOrderAllowed() {
        LocalTime currentTime = LocalTime.now();
        return currentTime.isBefore(closingTime);
    }
    
    public static void setMenuContent(String content){
        menuContent = content;
        String[] lines = content.split("\n");
        for(String line:lines){
            String[] parts = line.split(",");
            if(parts.length>=3){
                String dish = parts[0];
                double price = Double.parseDouble(parts[1]);
                //String type = parts[2];
                
                orderTableModel.addRow(new Object[]{dish, 1, price});
            }
        }
        orderTableModel.fireTableDataChanged();
    }
    
    public static String getMenuContent(){
        return menuContent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WaiterGUI waiterGUI = new WaiterGUI();
                TableGUI tableGUI = new TableGUI(waiterGUI);
                tableGUI.setVisible(true);
                tableGUI.addWindowListener(new java.awt.event.WindowAdapter(){
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent windowEvent){
                        tableGUI.setVisible(false);
                        waiterGUI.setVisible(true);
                    }
                });
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
